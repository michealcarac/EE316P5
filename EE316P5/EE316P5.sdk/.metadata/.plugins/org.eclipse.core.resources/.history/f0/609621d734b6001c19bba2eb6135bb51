/*
 * main.c
 *
 *  Created on: Apr 18, 2018
 *      Author: arthur
 */

#include "main.h"

const u8 Channel_List[NUMBER_OF_CHANNELS] = {
	0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
}; // 00008
const char *Channel_Names[32] = {
	"", "", "", "VP-VN",
	"", "", "", "",
	"", "", "", "",
	"", "", "", "",
	"A0", "A1", "A2", "A3",
	"A4", "A5", "A6", "A7",
	"A8", "A9", "A10", "A11",
	"A12", "A13", "A14", "A15"
};

void Xadc_Init(XSysMon *InstancePtr, u32 DeviceId) {
	XSysMon_Config *ConfigPtr;
	ConfigPtr = XSysMon_LookupConfig(DeviceId);
	XSysMon_CfgInitialize(InstancePtr, ConfigPtr, ConfigPtr->BaseAddress);

	// Set Sequencer mode to single channel
	XSysMon_SetSequencerMode(InstancePtr,XSM_SEQ_MODE_SINGCHAN);
	// Set single channel default to AUX min
	XSysMon_SetSingleChParams(InstancePtr , XADCPS_CH_AUX_MIN, FALSE, FALSE, FALSE);
	// Set all Unipolar
	XSysMon_SetSeqInputMode(InstancePtr,0);
	// Set the ADCCLK frequency equal to 1/32 of System clock
	XSysMon_SetAdcClkDivisor(InstancePtr, 32);
	// Enable Calibration
	XSysMon_SetCalibEnables(InstancePtr, XSM_CFR1_CAL_PS_GAIN_OFFSET_MASK | XSM_CFR1_CAL_ADC_GAIN_OFFSET_MASK);
}

#define READDATA_DBG 1
u32 Xadc_ReadData (XSysMon *InstancePtr,u16 channelSel)
{
	u16 adc_data;
	// Change Channel Selected
	printf("test1.5");
	XSysMon_SetSequencerMode(InstancePtr,XSM_SEQ_MODE_SINGCHAN+channelSel);
	printf("test2");
	// Read Data
	adc_data = (u16)XSysMon_GetAdcData(InstancePtr,XADCPS_CH_AUX_MIN+channelSel);

	if (READDATA_DBG != 0)
		printf("%d \n\r",adc_data);

	return adc_data; // return a high bit for each channel successfully read
}

float Xadc_RawToVoltage(u16 Data) {
	return ADC_MAXIMUM_VOLTAGE * (float)Data/(float)0xFFFF;
}

/* This needs to be looked at */
//void Btn_Init(XGpio *InstancePtr, u32 DeviceId) {
//	XGpio_Config *ConfigPtr;
//	printf("Btn_Init 1");
//	ConfigPtr = XGpio_LookupConfig(DeviceId);
//	printf("Btn_Init 2");
//	XGpio_CfgInitialize(InstancePtr, ConfigPtr, ConfigPtr->BaseAddress);
//	printf("Btn_Init 3");
//	XGpio_SetDataDirection(InstancePtr, 1, 0b11);
//	printf("Btn_Init 4");
//}

float Xadc_Read(XSysMon *InstancePtr, u32 ChannelSelect) {
	float Xadc_VoltageData;
	printf("testread");
	Xadc_VoltageData = Xadc_RawToVoltage(Xadc_ReadData(InstancePtr,ChannelSelect)); //Grab Raw Voltage data
	if (READDATA_DBG != 0)
		printf("Analog Input %s: %.3fV\r\n", Channel_Names[XADCPS_CH_AUX_MIN + ChannelSelect], Xadc_VoltageData);
	return Xadc_VoltageData;
}
